package com.example.fenil.prinil.actvity;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.text.Html;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

import com.example.fenil.prinil.R;
import com.example.fenil.prinil.util.Constants;
import com.example.fenil.prinil.util.PrefUtil;
import com.example.fenil.prinil.util.SnackBar;

import java.util.Timer;
import java.util.TimerTask;

public class StartingActivity extends AppCompatActivity implements View.OnClickListener {

    String TAG = getClass().getSimpleName();
    Activity context = StartingActivity.this;

    private ViewPager viewPager;
    private LinearLayout dotsLayout;
    private int[] layouts;
    private MyViewPagerAdapter myViewPagerAdapter;
    private TextView[] dots;
    private boolean isExit = false;
    private Button btn_logIn;
    private Button btn_signUp;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_starting);

        //region  Connection Condition
        if (Constants.isCheckInternetcon(context)){

        }else {
            SnackBar.makeLong(context, "No Internet Connection. Please check your internet connection");
        }
        //endregion

        //region Preference (Check User Login Or Not)
        if (PrefUtil.getbooleanPref(Constants.PRE_LOGINCHECK,context)) {
            startActivity(new Intent(context,HomeNavigationActivity.class));
            finish();
        }else if (PrefUtil.getbooleanPref(Constants.PRE_LOGINCHECK_FACEBOOK,context)){
            startActivity(new Intent(context,HomeNavigationActivity.class));
            finish();
        }else if (PrefUtil.getbooleanPref(Constants.PRE_LOGINCHECK_GOOGLE,context)){
            startActivity(new Intent(context,HomeNavigationActivity.class));
            finish();
        }
        //endregion

        //region  Find View (Widget)
        viewPager = (ViewPager) findViewById(R.id.viewPager);
        dotsLayout = (LinearLayout) findViewById(R.id.layoutDots);
        btn_logIn = (Button) findViewById(R.id.btn_login);
        btn_signUp = (Button) findViewById(R.id.btn_signUp);
        //endregion

        //region Button click Listener
        btn_logIn.setOnClickListener(this);
        btn_signUp.setOnClickListener(this);
        //endregion



        //region layouts of all welcome sliders
        // add few more layouts if you want
        layouts = new int[]{
                R.layout.welcome_slide1,
                R.layout.welcome_slide2,
                R.layout.welcome_slide3,
                R.layout.welcome_slide4};
        //endregion

        //region adding bottom dots
        addBottomDots(0);
        //endregion

        //region Viewpager Adapter
        myViewPagerAdapter = new MyViewPagerAdapter();
        viewPager.setAdapter(myViewPagerAdapter);
        viewPager.addOnPageChangeListener(viewPagerPageChangeListener);

        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new MyTimerTask(),2000,4000);
        //endregion
    }

    //region  Dots (ImageSlider)
    private void addBottomDots(int currentPage) {
        dots = new TextView[layouts.length];

        int[] colorsActive = getResources().getIntArray(R.array.array_dot_active);
        int[] colorsInactive = getResources().getIntArray(R.array.array_dot_inactive);

        dotsLayout.removeAllViews();
        for (int i = 0; i < dots.length; i++) {
            dots[i] = new TextView(this);
            dots[i].setText(Html.fromHtml("&#8226;"));
            dots[i].setTextSize(35);
            dots[i].setTextColor(colorsInactive[currentPage]);
            dotsLayout.addView(dots[i]);
        }

        if (dots.length > 0)
            dots[currentPage].setTextColor(colorsActive[currentPage]);
    }
    //endregion

    //region ViewPager
    private int getItem(int i) {
        return viewPager.getCurrentItem() + i;
    }

    private void launchHomeScreen() {
        //prefManager.setFirstTimeLaunch(false);
        startActivity(new Intent(context, StartingActivity.class));
        finish();
    }
    //region View pager adapter
    private class MyViewPagerAdapter extends PagerAdapter {
        private LayoutInflater layoutInflater;

        public MyViewPagerAdapter() {

        }
        @Override
        public Object instantiateItem(ViewGroup container, int position) {
            layoutInflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);

            View view = layoutInflater.inflate(layouts[position], container, false);
            container.addView(view);
            return view;
        }
        @Override
        public int getCount() {
            return layouts.length;
        }
        @Override
        public boolean isViewFromObject(View view, Object obj) {
            return view == obj;
        }
        @Override
        public void destroyItem(ViewGroup container, int position, Object object) {
            View view = (View) object;
            container.removeView(view);
        }
    }
    //endregion

        //region ViewPager Listener
    ViewPager.OnPageChangeListener viewPagerPageChangeListener = new ViewPager.OnPageChangeListener() {
        @Override
        public void onPageSelected(int position) {
            addBottomDots(position);
            // changing the next button text 'NEXT' / 'GOT IT'
            if (position == layouts.length - 1) {

            } else {
            }
        }
        @Override
        public void onPageScrolled(int arg0, float arg1, int arg2) {
        }

        @Override
        public void onPageScrollStateChanged(int arg0) {
        }
    };
    //endregion

        //region View Pager slide Timer
    private class MyTimerTask extends TimerTask {
        @Override
        public void run() {
            StartingActivity.this.runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    if (viewPager.getCurrentItem() == 0)
                    {
                        viewPager.setCurrentItem(1);
                    }else if (viewPager.getCurrentItem() == 1)
                    {
                        viewPager.setCurrentItem(2);
                    }else if (viewPager.getCurrentItem() == 2)
                    {
                        viewPager.setCurrentItem(3);
                    }else
                    {
                        viewPager.setCurrentItem(0);
                    }
                }
            });
        }
    }
    //endregion

    //endregion

    //region onClick method
        @Override
        public void onClick(View view) {
            if (view.getId() == R.id.btn_login) {
                //region Login Button
                startActivity(new Intent(context,LoginActivity.class));
                //endregion
            }else if (view.getId() == R.id.btn_signUp) {
                //region signup Button
                startActivity(new Intent(context,SignupActivity.class));
                //endregion
            }
        }
    //  endregion

    //region onBackPressed
    @Override
    public void onBackPressed() {
        if (isExit) {
            moveTaskToBack(true);
            android.os.Process.killProcess(android.os.Process.myPid());
            System.exit(1);
        }
        this.isExit = true;
        Toast.makeText(this, "Press back again to Exit", Toast.LENGTH_SHORT).show();

        new Handler().postDelayed(new Runnable() {
            @Override
            public void run() {
                isExit=false;
            }
        }, 2000);
    }
    //endregion
}
