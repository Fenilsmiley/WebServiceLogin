package com.example.fenil.prinil.fragment_login;


import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.text.InputType;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.example.fenil.prinil.R;
import com.example.fenil.prinil.actvity.LoginActivity;
import com.example.fenil.prinil.actvity.SignupActivity;
import com.example.fenil.prinil.model.UserRegister;
import com.example.fenil.prinil.util.Constants;
import com.example.fenil.prinil.util.SnackBar;
import com.example.fenil.prinil.webutil.JSONHelper;
import com.example.fenil.prinil.webutil.OnAsyncLoader;

import org.json.JSONException;
import org.json.JSONObject;
import org.json.JSONStringer;
import org.w3c.dom.Text;

import static android.content.ContentValues.TAG;


/**
 * A simple {@link Fragment} subclass.
 */
public class PasswordFragment extends Fragment implements View.OnClickListener {


    private EditText et_confPass;
    private EditText et_newPass;
    private Button btn_next;
    private String mobile;
    private UserRegister userRegister;
    private boolean isMobile=false;
    private boolean isEmail=false;
    private String Email;
    private String Password,NewPassword;
    private TextView tv_errror_password;
    private TextView tv_errror_conf_password;
    private Toolbar toolbar;
    private Button eye_button1;
    private Button eye_button;

    public PasswordFragment() {
        // Required empty public constructor
    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_password, container, false);

        //region toolbar
        Toolbar toolbar = (Toolbar) view.findViewById(R.id.toolbar);
        toolbar.setTitle("Reset Password");
        toolbar.setTitleTextColor(getResources().getColor(R.color.white));
        ((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);
        toolbar.setNavigationIcon(R.drawable.ic_back);
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                getActivity().onBackPressed();
            }
        });
        //endregion

        //region  Connection Condition
        if (Constants.isCheckInternetcon(getActivity())){

        }else {
            SnackBar.makeLong(getActivity(), "No Internet Connection. Please check your internet connection");
        }
        //endregion


        userRegister = new UserRegister();

        et_newPass = (EditText) view.findViewById(R.id.et_new_password);
        et_confPass = (EditText) view.findViewById(R.id.et_conf_password);
        btn_next = (Button) view.findViewById(R.id.btn_next);
        tv_errror_password = (TextView) view.findViewById(R.id.tv_errror_password);
        tv_errror_conf_password = (TextView) view.findViewById(R.id.tv_errror_conf_password);
        eye_button = (Button) view.findViewById(R.id.eyeButton);
        eye_button1 = (Button) view.findViewById(R.id.eyeButton1);

        btn_next.setOnClickListener(this);

        getBundleData();

        //region password show listener
        eye_button.setOnTouchListener(new View.OnTouchListener() {
                                          @Override
                                          public boolean onTouch(View v, MotionEvent event) {
                                              switch ( event.getAction() ) {
                                                  case MotionEvent.ACTION_DOWN:
                                                      et_newPass.setInputType(InputType.TYPE_CLASS_TEXT);
                                                      break;
                                                  case MotionEvent.ACTION_UP:
                                                      et_newPass.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
                                                      break;
                                              }
                                              return true;
                                          }
                                      }
        );

        eye_button1.setOnTouchListener(new View.OnTouchListener() {
                                           @Override
                                           public boolean onTouch(View v, MotionEvent event) {
                                               switch ( event.getAction() ) {
                                                   case MotionEvent.ACTION_DOWN:
                                                       et_confPass.setInputType(InputType.TYPE_CLASS_TEXT);
                                                       break;
                                                   case MotionEvent.ACTION_UP:
                                                       et_confPass.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);
                                                       break;
                                               }
                                               return true;
                                           }
                                       }
        );
        //endregion

        return view;
    }

    //region getBundleData
    void getBundleData() {
        if (getArguments().getString(Constants.BundleForgotPhonePass)!= null){
            //region Mobile
            mobile = getArguments().getString(Constants.BundleForgotPhonePass);
            userRegister.setPhone(mobile);
            isMobile = true;
            //endregion
        }else if (getArguments().getString(Constants.BundleForgotEmailIdPass)!= null){
            //region Email
            Email = getArguments().getString(Constants.BundleForgotEmailIdPass);
            userRegister.setEmailId(Email);
            isEmail = true;
            //endregion
        }
    }
    //endregion

    //region condition
    boolean condition() {
        boolean isRight = false;

        if (!et_newPass.getText().toString().isEmpty())
        {
            tv_errror_password.setVisibility(View.GONE);
            if (et_newPass.getText().toString().length() > 5)
            {
                tv_errror_password.setVisibility(View.GONE);
                if (!et_confPass.getText().toString().isEmpty()) {
                    if (et_newPass.getText().toString().equals(et_confPass.getText().toString())) {
                        isRight = true;
                        tv_errror_conf_password.setVisibility(View.GONE);
                    } else {
                        tv_errror_conf_password.setText("Password doesn't matched.");
                        tv_errror_conf_password.setVisibility(View.VISIBLE);
                        isRight = false;
                    }
                } else {
                    tv_errror_conf_password.setText("Enter confirm password.");
                    tv_errror_conf_password.setVisibility(View.VISIBLE);
                    isRight = false;
                }
            }else {
                tv_errror_password.setText("Password must be 6 charachter long.");
                tv_errror_password.setVisibility(View.VISIBLE);
                isRight = false;
            }
        }else {
            tv_errror_password.setText("Enter new password.");
            tv_errror_password.setVisibility(View.VISIBLE);
            isRight = false;
        }
        return isRight;
    }
    //endregion

    //region Json Update Password
    public void UpdateData(final String Value,String UserType){
        try {
            JSONStringer stringer = new JSONStringer();
            stringer.object();                      // {
            stringer.key("UserMasterData");       // UserMasterData
            stringer.object();                      // {


            stringer.key("UserNameType").value(UserType);
            if (UserType == "Phone") {
                stringer.key("Phone").value(Value);
            }else {
                stringer.key("Email").value(Value);
            }
            stringer.key("Password").value(et_confPass.getText().toString());
            stringer.endObject();                   // }
            stringer.endObject();                   // }

            JSONHelper helper = new JSONHelper(getActivity(), Constants.BASE_URL + Constants.UpdateUserMasterForGotPassowrd, stringer, new OnAsyncLoader() {
                @Override
                public void onResult(String result) throws JSONException {
                    Log.d(TAG, "onResult: "+result);
                    JSONObject object = new JSONObject(result);
                    JSONObject object1 = object.getJSONObject("UpdateUserMasterForGotPassowrdResult");
                    if (object1.getInt("ErrorCode") == 0){
                        //startActivity(new Intent(getActivity(),LogInActivity.class));
                        LoginFragment fragment = new LoginFragment();
                        FragmentTransaction ft = getFragmentManager().beginTransaction();
                        ft.replace(R.id.frame_login,fragment);
                        ft.commit();
                    }else if (object1.getInt("ErrorCode") == -2){
                        SnackBar.makeLong(getActivity(),"Error : Try again latter");
                    }else {
                        SnackBar.makeLong(getActivity(),"Contact to server provider");
                    }
                }

            });
            helper.execute();

        } catch (Exception ex) {
            Log.i(TAG, "InsertRegisteredUserMaster: " + ex);
        }
    }
    //    endregion

    @Override
    public void onClick(View view) {
        if (view.getId() == R.id.btn_next){
            //region next button
            if (Constants.isCheckInternetcon(getActivity())){
                if (condition()){
                    if (isMobile){
                        userRegister.setPassword(Password.toString());
                        UpdateData(mobile, "2");

                    } else if (isEmail){
                        userRegister.setPassword(et_newPass.getText().toString());
                        UpdateData(Email, "1");

                    }
                }
            }else {
                SnackBar.makeLong(getActivity(), "No Internet Connection. Please check your internet connection");
            }
            //endregion
        }
    }
}
